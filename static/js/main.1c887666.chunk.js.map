{"version":3,"sources":["App/css.module.css","Components/FiltersSection/css.module.css","Components/Pets/css.module.css","Components/Appbar/css.module.css","Imgs/logo.png","Components/ProgressOn/css.module.css","Imgs/pet.png","Components/Appbar/view.js","Components/ProgressOn/view.js","Redux/Actions/index.js","Components/FiltersSection/view.js","Components/FiltersSection/index.js","Components/Pets/index.js","Components/Pets/view.js","App/App.js","App/index.js","Redux/Reducers/petsReducer.js","Redux/Reducers/filtersReducer.js","Redux/Reducers/progressOnReducer.js","Redux/Reducers/index.js","Redux/Store/index.js","Utilities/Constants/index.js","Utilities/Functions/index.js","ApiCall/index.js","Sagas/filters.js","Sagas/errors.js","Sagas/pets.js","Sagas/index.js","index.js"],"names":["module","exports","MyAppBar","AppBar","position","className","styles","appbar","Toolbar","src","AppLogo","alt","logo","ProgressOn","Box","container","CircularProgress","disableShrink","variant","size","actionDispatcher","action","payload","type","theme","createMuiTheme","palette","primary","main","secondary","FiltersContainer","connect","filtersReducer","petsReducer","dispatch","bindActionCreators","animalTypes","useState","animalTypesCollapsed","setAnimalTypesCollapsed","test","setTest","useEffect","length","List","component","mainList","subheader","ListSubheader","mainListTitle","ListItem","button","onClick","ListItemText","map","currObj","index","Collapse","in","timeout","unmountOnExit","key","disablePadding","subList","ListItemIcon","Checkbox","edge","checked","name","PetsContainer","petsData","console","log","Grid","spacing","item","xs","sm","md","lg","Paper","paper","petImageContainer","photos","medium","PetImage","petImage","nameContainer","App","progressOnReducer","visible","mainContainer","subContainer","filterContainer","dataContainer","AppContainer","initialState","combineReducers","state","animals","types","sagaMiddleware","reduxSaga","API_KEY","SECRET_KEY","getToken","localStorage","getItem","apiCall","url","method","data","a","formData","FormData","append","fetch","body","then","response","json","token","headers","Authorization","getFilters","filters","put","call","error","message","actionDispatched","takeLeading","getNewError","errors","access_token","setItem","alert","getPets","pets","rootSaga","all","store","createStore","CombineReducers","applyMiddleware","runSaga","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c887666.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"css_mainContainer__366yK\",\"subContainer\":\"css_subContainer__3oumP\",\"filterContainer\":\"css_filterContainer__2U5qP\",\"dataContainer\":\"css_dataContainer__2RSGw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainListTitle\":\"css_mainListTitle__22ezu\",\"mainList\":\"css_mainList__1jASM\",\"subList\":\"css_subList__a6dGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"css_paper__3ruKn\",\"petImageContainer\":\"css_petImageContainer__2p_o5\",\"petImage\":\"css_petImage__3P6qz\",\"nameContainer\":\"css_nameContainer__3TKD5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appbar\":\"css_appbar__3fe3V\",\"logo\":\"css_logo__8nphV\"};","module.exports = __webpack_public_path__ + \"static/media/logo.d1339207.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"css_container__3EG3U\"};","module.exports = __webpack_public_path__ + \"static/media/pet.4f325f55.png\";","/* React */\r\nimport React from 'react';\r\n\r\n/* Material-ui */\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n\r\n/* Components */\r\nimport AppLogo from '../../Imgs/logo.png'\r\nimport styles from './css.module.css';\r\n\r\nexport default function MyAppBar() {\r\n    return (\r\n        <AppBar position=\"static\" className={styles.appbar}>\r\n            <Toolbar>\r\n                <img src={AppLogo} alt=\"Logo\" className={styles.logo}></img>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","/* React */\r\nimport React from 'react';\r\n\r\n/* Material-ui */\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n/* Components */\r\nimport styles from './css.module.css';\r\n\r\nexport default function ProgressOn() {\r\n    return (\r\n        <Box className={styles.container}>\r\n            <CircularProgress disableShrink={true} variant=\"indeterminate\" size={60} />\r\n        </Box>\r\n    );\r\n}\r\n","export const GET_NEW_TOKEN_BEGIN = \"GET_NEW_TOKEN_BEGIN\";\r\nexport const GET_NEW_TOKEN_SUCCESS = \"GET_NEW_TOKEN_SUCCESS\";\r\nexport const GET_ANIMAL_TYPES_BEGIN = \"GET_ANIMAL_TYPES_BEGIN\";\r\nexport const GET_ANIMAL_TYPES_SUCCESS = \"GET_ANIMAL_TYPES_SUCCESS\";\r\nexport const GET_PETS_BEGIN = \"GET_PETS_BEGIN\";\r\nexport const GET_PETS_SUCCESS = \"GET_PETS_SUCCESS\";\r\n\r\nexport const SET_PROGRESS_ON = \"SET_PROGRESS_ON\";\r\nexport const SET_PROGRESS_OFF = \"SET_PROGRESS_OFF\";\r\nexport const NEW_ERROR = \"NEW_ERROR\";\r\n\r\nexport const actionDispatcher = (action, payload) => ({\r\n    type: action,\r\n    payload\r\n});\r\n","/* React */\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n/* Material-ui */\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport Checkbox from '@material-ui/core/CheckBox';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n\r\n/* Redux-actions */\r\nimport { GET_ANIMAL_TYPES_BEGIN, } from '../../Redux/Actions';\r\n\r\n/* Components */\r\nimport styles from './css.module.css';\r\n\r\nexport default function Filters({ filtersReducer, actionDispatcher }) {\r\n\r\n    /* Store data */\r\n    const { animalTypes } = filtersReducer;\r\n\r\n    /* Hooks */\r\n    const [animalTypesCollapsed, setAnimalTypesCollapsed] = useState(false);\r\n    const [test, setTest] = useState(false);\r\n    useEffect(() => {\r\n        if (animalTypes.length === 0) actionDispatcher(GET_ANIMAL_TYPES_BEGIN);\r\n    });\r\n\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            className={styles.mainList}\r\n            subheader={\r\n                <ListSubheader component=\"div\" className={styles.mainListTitle}>\r\n                    Filters\r\n              </ListSubheader>\r\n            }\r\n        >\r\n\r\n            <ListItem button onClick={() => setAnimalTypesCollapsed(!animalTypesCollapsed)}>\r\n                <ListItemText primary=\"Type\" />\r\n                {animalTypesCollapsed ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            {\r\n                animalTypes.map((currObj, index) => {\r\n                    return (\r\n                        <Collapse in={animalTypesCollapsed} timeout=\"auto\" unmountOnExit key={index}>\r\n                            <List component=\"div\" disablePadding className={styles.subList}>\r\n                                <ListItem button >\r\n                                    <ListItemIcon>\r\n                                        <MuiThemeProvider theme={theme}>\r\n                                            <Checkbox\r\n                                                edge=\"end\"\r\n                                                checked={true}\r\n                                            />\r\n                                        </MuiThemeProvider>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={currObj.name} />\r\n                                </ListItem>\r\n                            </List>\r\n                        </Collapse>\r\n                    )\r\n                })\r\n            }\r\n\r\n            <ListItem button onClick={() => setTest(!test)}>\r\n                <ListItemText primary=\"Test\" />\r\n                {test ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            {\r\n                animalTypes.map((currObj, index) => {\r\n                    return (\r\n                        <Collapse in={test} timeout=\"auto\" unmountOnExit key={index}>\r\n                            <List component=\"div\" disablePadding className={styles.subList}>\r\n                                <ListItem button >\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"end\"\r\n                                            checked={false}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={currObj.name} />\r\n                                </ListItem>\r\n                            </List>\r\n                        </Collapse>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </List>\r\n\r\n    )\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#000\"\r\n        },\r\n        secondary: {\r\n            main: \"#fff\"\r\n        },\r\n    }\r\n});\r\n","/* Redux */\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\n/* Redux-actions */\r\nimport { actionDispatcher } from '../../Redux/Actions';\r\n\r\n\r\n/* Components */\r\nimport view from \"./view\";\r\n\r\nconst mapStateToProps = ({ filtersReducer, petsReducer, }) => ({\r\n    filtersReducer, petsReducer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ actionDispatcher }, dispatch);\r\n\r\nconst FiltersContainer = connect(mapStateToProps, mapDispatchToProps)(view);\r\n\r\nexport default FiltersContainer;\r\n","/* Redux */\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\n/* Redux-actions */\r\nimport { actionDispatcher } from '../../Redux/Actions';\r\n\r\n\r\n/* Components */\r\nimport view from \"./view\";\r\n\r\nconst mapStateToProps = ({ petsReducer, }) => ({\r\n    petsReducer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ actionDispatcher }, dispatch);\r\n\r\nconst PetsContainer = connect(mapStateToProps, mapDispatchToProps)(view);\r\n\r\nexport default PetsContainer;\r\n","/* React */\r\nimport React, { useEffect } from 'react';\r\n\r\n/* Material-ui */\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n/* Redux-actions */\r\nimport { GET_PETS_BEGIN } from '../../Redux/Actions';\r\n\r\n/* Components */\r\nimport styles from './css.module.css';\r\n\r\n/* Images */\r\nimport PetImage from '../../Imgs/pet.png'\r\n\r\nexport default function Pets({ petsReducer, actionDispatcher }) {\r\n\r\n    /* Store data */\r\n    const { petsData } = petsReducer;\r\n    console.log(petsData)\r\n    /* Hooks */\r\n    useEffect(() => {\r\n        if (petsData.length === 0) actionDispatcher(GET_PETS_BEGIN);\r\n    });\r\n\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n\r\n            {\r\n                petsData.map((currObj, index) => {\r\n                    return (\r\n                        <Grid item xs={12} sm={6} md={3} lg={3} key={index}>\r\n                            <Paper className={styles.paper}>\r\n                                <Box className={styles.petImageContainer}>\r\n                                    <img src={currObj.photos.length > 0 ? currObj.photos[0].medium : PetImage} className={styles.petImage} alt=\"petImg\" />\r\n                                </Box>\r\n                                <Box className={styles.nameContainer}>{currObj.name}</Box>\r\n                            </Paper>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n        </Grid>\r\n    )\r\n}","/* React */\nimport React from 'react';\n\n/* Material-ui */\nimport Box from '@material-ui/core/Box';\n\n/* Components */\nimport AppBar from '../Components/Appbar/view';\nimport styles from './css.module.css';\nimport ProgressOn from '../Components/ProgressOn/view';\nimport FiltersContainer from '../Components/FiltersSection';\nimport PetsContainer from '../Components/Pets/';\n\nfunction App({ progressOnReducer }) {\n\n  const { visible } = progressOnReducer;\n  if (visible) return <ProgressOn />\n\n\n  return (\n    <Box className={styles.mainContainer}>\n      <AppBar />\n\n      <Box className={styles.subContainer}>\n\n        <Box className={styles.filterContainer}>\n          <FiltersContainer />\n        </Box>\n\n        <Box className={styles.dataContainer}>\n          <PetsContainer />\n        </Box>\n\n      </Box>\n\n    </Box>\n  );\n}\n\nexport default App;\n","/* Redux */\r\nimport { connect } from \"react-redux\";\r\n\r\n/* Components */\r\nimport App from \"./App\";\r\n\r\nconst mapStateToProps = ({ progressOnReducer }) => ({\r\n    progressOnReducer\r\n});\r\n\r\nconst AppContainer = connect(mapStateToProps)(App);\r\n\r\nexport default AppContainer;\r\n","/* Redux-actions */\r\nimport { GET_PETS_SUCCESS } from '../Actions';\r\n\r\nconst initialState = {\r\n    petsData: [],\r\n}\r\n\r\nexport default function PetsReducer(state = initialState, action) {\r\n    \r\n    switch (action.type) {\r\n\r\n        case GET_PETS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                petsData: action.payload.animals\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","/* Reduxñ-actions */\r\nimport { GET_ANIMAL_TYPES_SUCCESS } from '../Actions';\r\n\r\nconst initialState = {\r\n    animalTypes: [],\r\n}\r\n\r\nexport default function FiltersReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_ANIMAL_TYPES_SUCCESS:\r\n            return {\r\n                animalTypes: action.payload.types\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_PROGRESS_OFF, SET_PROGRESS_ON } from '../Actions';\r\n\r\nconst initialState = {\r\n    visible: false\r\n}\r\n\r\nexport default function ProgressOnReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case SET_PROGRESS_OFF:\r\n            return {\r\n                ...state,\r\n                visible: false\r\n            }\r\n\r\n        case SET_PROGRESS_ON:\r\n            return {\r\n                ...state,\r\n                visible: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","/* Redux */\r\nimport { combineReducers } from 'redux';\r\n\r\n/* Reducers */\r\nimport petsReducer from './petsReducer';\r\nimport filtersReducer from './filtersReducer';\r\nimport progressOnReducer from './progressOnReducer';\r\n\r\nexport default combineReducers({\r\n    petsReducer,\r\n    filtersReducer,\r\n    progressOnReducer,\r\n});\r\n","/* Redux */\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\n/* Reducers */\r\nimport CombineReducers from '../Reducers/';\r\n\r\n/* Sagas */\r\nimport reduxSaga from 'redux-saga';\r\n\r\nconst sagaMiddleware = reduxSaga();\r\n\r\nexport default function configureStore() {\r\n    return {\r\n        ...createStore(CombineReducers, applyMiddleware(sagaMiddleware)),\r\n        runSaga: sagaMiddleware.run\r\n    }\r\n}\r\n","/* General */\r\nexport const POST_METHOD = \"POST\";\r\nexport const GET_METHOD = \"GET\";\r\nexport const API_KEY = \"QjZE3qZXQnpsJ2iAWJLCv4AaTGJO8r4ki71V6g3RLZ8ZBu4cuG\";\r\nexport const SECRET_KEY = \"9i1e56VXsfo1Kn0b2c73VdFlCWCLJuRwEXgqycxh\";\r\n\r\n/* Urls */\r\nexport const GET_TOKEN_URL = \"https://api.petfinder.com/v2/oauth2/token/\";\r\nexport const GET_ANIMALS_URL = \"https://api.petfinder.com/v2/animals/\";\r\nexport const GET_ANIMALS_TYPES_URL = \"https://api.petfinder.com/v2/types/\";\r\nexport const GET_ANIMAL_BREED_URL = \"https://api.petfinder.com/v2/types/{type}/breeds\";","export const saveToken = (token) => localStorage.setItem(\"token\", token);\r\n\r\nexport const getToken = () => localStorage.getItem(\"token\", \"no-token\");\r\n\r\nexport const clearLocalStorage = () => localStorage.clear();\r\n","/* Constants */\r\nimport { GET_METHOD, POST_METHOD, API_KEY, SECRET_KEY, } from '../Utilities/Constants';\r\n\r\n/* Functions */\r\nimport { getToken } from '../Utilities/Functions';\r\n\r\nexport default async function apiCall(url, method, data) {\r\n\r\n    if (method === POST_METHOD) {\r\n\r\n        let formData = new FormData();\r\n        formData.append('grant_type', 'client_credentials');\r\n        formData.append('client_id', API_KEY);\r\n        formData.append('client_secret', SECRET_KEY);\r\n\r\n        return await fetch(url, {\r\n            method,\r\n            body: formData,\r\n        }).then(response => response.json());\r\n\r\n    } else if (method === GET_METHOD) {\r\n\r\n        let token = getToken();\r\n        return await fetch(url, {\r\n            method,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }).then(response => response.json());\r\n\r\n    }\r\n}\r\n","/* Sagas */\r\nimport { put, call, takeLeading, } from 'redux-saga/effects';\r\n\r\n/* api */\r\nimport apiCall from '../ApiCall/';\r\n\r\n/* Constats */\r\nimport { GET_METHOD, GET_ANIMALS_TYPES_URL } from '../Utilities/Constants';\r\n\r\n/* Actions */\r\nimport { GET_ANIMAL_TYPES_BEGIN, GET_ANIMAL_TYPES_SUCCESS, SET_PROGRESS_ON, SET_PROGRESS_OFF, NEW_ERROR } from '../Redux/Actions';\r\n\r\nexport function* getFilters() {\r\n    try {\r\n\r\n        yield put({ type: SET_PROGRESS_ON });\r\n\r\n        const payload = yield call(apiCall, GET_ANIMALS_TYPES_URL, GET_METHOD,);\r\n        if (payload.error) yield console.log(payload);\r\n        else yield put({ type: GET_ANIMAL_TYPES_SUCCESS, payload });\r\n\r\n        yield put({ type: SET_PROGRESS_OFF });\r\n\r\n    } catch (exception) {\r\n        yield put({ type: NEW_ERROR, payload: { message: exception.message, actionDispatched: GET_ANIMAL_TYPES_BEGIN } });\r\n    }\r\n}// fin getProductsByProductGroup\r\n\r\n//watchers\r\nexport default function* filters() {\r\n    yield takeLeading(GET_ANIMAL_TYPES_BEGIN, getFilters);\r\n}\r\n","/* Sagas */\r\nimport { put, call, takeLeading, } from 'redux-saga/effects';\r\n\r\n/* api */\r\nimport apiCall from '../ApiCall/';\r\n\r\n/* Constats */\r\nimport { POST_METHOD, GET_TOKEN_URL } from '../Utilities/Constants';\r\n\r\n/* Functions */\r\nimport { saveToken } from '../Utilities/Functions';\r\n\r\n/* Actions */\r\nimport { NEW_ERROR, } from '../Redux/Actions';\r\n\r\nexport function* getNewError(action) {\r\n    try {\r\n\r\n        if (action.payload.message === \"Failed to fetch\") {\r\n            const payload = yield call(apiCall, GET_TOKEN_URL, POST_METHOD,);\r\n            yield saveToken(payload.access_token);\r\n            yield put({ type: action.payload.actionDispatched });\r\n        }\r\n        else {\r\n            alert(\"hubo un error :c\");\r\n            console.log(action.payload);\r\n        }\r\n\r\n    } catch (exception) {\r\n        console.log(exception);\r\n    }\r\n}// fin getProductsByProductGroup\r\n\r\n//watchers\r\nexport default function* errors() {\r\n    yield takeLeading(NEW_ERROR, getNewError);\r\n}\r\n","/* Sagas */\r\nimport { put, call, takeLeading, } from 'redux-saga/effects';\r\n\r\n/* api */\r\nimport apiCall from '../ApiCall/';\r\n\r\n/* Constats */\r\nimport { GET_ANIMALS_URL, GET_METHOD } from '../Utilities/Constants';\r\n\r\n/* Actions */\r\nimport { SET_PROGRESS_ON, SET_PROGRESS_OFF, NEW_ERROR, GET_PETS_BEGIN, GET_PETS_SUCCESS, } from '../Redux/Actions';\r\n\r\nexport function* getPets() {\r\n    try {\r\n\r\n        yield put({ type: SET_PROGRESS_ON });\r\n\r\n        const payload = yield call(apiCall, GET_ANIMALS_URL, GET_METHOD,);\r\n\r\n        if (payload.error) yield console.log(payload);\r\n        else yield put({ type: GET_PETS_SUCCESS, payload });\r\n\r\n        yield put({ type: SET_PROGRESS_OFF });\r\n\r\n    } catch (exception) {\r\n        yield put({ type: NEW_ERROR, payload: { message: exception.message, actionDispatched: GET_PETS_BEGIN } });\r\n    }\r\n}// fin getProductsByProductGroup\r\n\r\n//watchers\r\nexport default function* pets() {\r\n    yield takeLeading(GET_PETS_BEGIN, getPets);\r\n}\r\n","/* Sagas configs*/\r\nimport { all } from 'redux-saga/effects';\r\n\r\n/* Sagas */\r\nimport filters from './filters';\r\nimport errors from './errors';\r\nimport pets from './pets';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([filters(), errors(), pets()])\r\n}\r\n","/* React */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n/* Components */\nimport AppContainer from './App/';\nimport configureStore from './Redux/Store';\nimport './index.css';\nimport rootSaga from './Sagas';\n\nlet store = configureStore();\nstore.runSaga(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}