{"version":3,"sources":["Components/FiltersSection/css.module.css","Components/Pets/css.module.css","Components/FiltersApplied/css.module.css","App/css.module.css","Components/Appbar/css.module.css","Imgs/logo.png","Components/ProgressOn/css.module.css","Imgs/pet.png","Components/Appbar/view.js","Components/ProgressOn/view.js","Redux/Actions/index.js","Components/FiltersSection/view.js","Components/FiltersSection/index.js","Components/Pets/index.js","Components/Pets/view.js","Components/FiltersApplied/index.js","Components/FiltersApplied/view.js","App/App.js","App/index.js","Redux/Reducers/petsReducer.js","Redux/Reducers/filtersReducer.js","Redux/Reducers/progressOnReducer.js","Redux/Reducers/index.js","Redux/Store/index.js","Utilities/Constants/index.js","Utilities/Functions/index.js","ApiCall/index.js","Sagas/filters.js","Sagas/errors.js","Sagas/pets.js","Sagas/index.js","index.js"],"names":["module","exports","MyAppBar","AppBar","position","className","styles","appbar","Toolbar","src","AppLogo","alt","logo","ProgressOn","Box","container","CircularProgress","disableShrink","variant","size","actionDispatcher","action","payload","type","theme","createMuiTheme","palette","primary","main","secondary","FiltersContainer","connect","filtersReducer","petsReducer","dispatch","bindActionCreators","animalTypes","selectedAnimalTypeFilter","petsBreeds","showAnimalsTypesCollapsed","showANimalBreedsCollapsed","animalsBreedsShowFrom","animalsBreedsShowUntil","breedsSelected","useEffect","length","List","component","mainList","subheader","ListSubheader","mainListTitle","ListItem","button","onClick","data","ListItemText","map","currObj","index","Collapse","in","timeout","unmountOnExit","key","disablePadding","subList","typeSelected","name","ListItemIcon","Checkbox","edge","checked","slice","directionsArrowsContainer","Button","previousButton","from","until","disabled","startIcon","nextButton","endIcon","value","currentIndex","indexOf","newBreedsSelected","push","splice","breed","handleBreedsToogle","renderAnimalsBreeds","PetsContainer","petsData","petsPagination","currentPage","console","log","Grid","spacing","item","xs","sm","md","lg","Paper","paper","petImageContainer","photos","large","PetImage","petImage","nameContainer","breedContainer","breeds","directionButtonContainer","previousPageButton","page","nextPageButton","total_pages","FiltersAppliedContainer","Typography","filtersTitle","filtersSelectedIcon","filtersSelected","deleteFilter","clearAllIcon","clearAllButton","App","progressOnReducer","visible","mainContainer","subContainer","filterContainer","dataContainer","FiltersApplied","AppContainer","initialState","combineReducers","state","animals","pagination","types","sagaMiddleware","reduxSaga","API_KEY","SECRET_KEY","getToken","localStorage","getItem","joinQueryStringsToUrl","url","queryStrings","newUrl","URL","Object","keys","forEach","searchParams","append","apiCall","method","a","formData","FormData","fetch","body","then","response","json","token","headers","Authorization","getFilters","getBreedsByAnimalTypeSelected","filters","put","call","error","message","actionDispatched","GET_NEW_ANIMAL_BREED_URL","replace","takeLatest","getNewError","errors","hint","access_token","setItem","alert","takeLeading","getPets","getPetsWithFilter","pets","status","rootSaga","all","store","createStore","CombineReducers","applyMiddleware","runSaga","run","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,eAAiB,4BAA4B,cAAgB,2BAA2B,SAAW,sBAAsB,QAAU,qBAAqB,0BAA4B,uCAAuC,WAAa,wBAAwB,eAAiB,8B,mBCAnSD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,kBAAoB,+BAA+B,SAAW,sBAAsB,cAAgB,2BAA2B,eAAiB,4BAA4B,yBAA2B,sCAAsC,eAAiB,4BAA4B,mBAAqB,kC,mBCA5VD,EAAOC,QAAU,CAAC,aAAe,0BAA0B,gBAAkB,6BAA6B,oBAAsB,iCAAiC,eAAiB,4BAA4B,aAAe,4B,mBCA7ND,EAAOC,QAAU,CAAC,cAAgB,2BAA2B,aAAe,0BAA0B,gBAAkB,6BAA6B,cAAgB,6B,mBCArKD,EAAOC,QAAU,CAAC,OAAS,oBAAoB,KAAO,oB,mBCDtDD,EAAOC,QAAU,IAA0B,kC,mBCC3CD,EAAOC,QAAU,CAAC,UAAY,yB,mBCD9BD,EAAOC,QAAU,IAA0B,iC,0MCY5B,SAASC,IACpB,OACI,kBAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWC,IAAOC,QACxC,kBAACC,EAAA,EAAD,KACI,yBAAKC,IAAKC,IAASC,IAAI,OAAON,UAAWC,IAAOM,S,+CCNjD,SAASC,IACpB,OACI,kBAACC,EAAA,EAAD,CAAKT,UAAWC,IAAOS,WACnB,kBAACC,EAAA,EAAD,CAAkBC,eAAe,EAAMC,QAAQ,gBAAgBC,KAAM,M,YCQpEC,EAAmB,SAACC,EAAQC,GAAT,MAAsB,CAClDC,KAAMF,EACNC,Y,sLCyHJ,IAAME,EAAQC,YAAe,CACzBC,QAAS,CACLC,QAAS,CACLC,KAAM,QAEVC,UAAW,CACPD,KAAM,WCnIHE,EAFUC,aAND,SAAC,GAAD,MAAuC,CAC3DC,eADoB,EAAGA,eACPC,YADI,EAAmBA,gBAIhB,SAACC,GAAD,OAAcC,YAAmB,CAAEf,oBAAoBc,KAEzDH,EDaV,YAAwD,IAArCC,EAAoC,EAApCA,eAAgBZ,EAAoB,EAApBA,iBAGtCgB,EAC0FJ,EAD1FI,YAAaC,EAC6EL,EAD7EK,yBAA0BC,EACmDN,EADnDM,WAAYC,EACuCP,EADvCO,0BACvDC,EAA8FR,EAA9FQ,0BAA2BC,EAAmET,EAAnES,sBAAuBC,EAA4CV,EAA5CU,uBAAwBC,EAAoBX,EAApBW,eAO9E,OAJAC,qBAAU,WACqB,IAAvBR,EAAYS,QAAczB,EDpCA,6BCwC9B,kBAAC0B,EAAA,EAAD,CAAMC,UAAU,MACZ1C,UAAWC,IAAO0C,SAClBC,UAAW,kBAACC,EAAA,EAAD,CAAeH,UAAU,MAAM1C,UAAWC,IAAO6C,eAAjD,YAEX,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAMlC,EDhCD,8BCgC+C,CAAEmC,MAAOhB,MACnF,kBAACiB,EAAA,EAAD,CAAcnD,UAAWC,IAAO6C,cAAexB,QAAQ,SAD3D,IACsEY,EAA4B,kBAAE,IAAF,MAAkB,kBAAE,IAAF,MADpH,KAGIH,EAAYqB,KAAI,SAACC,EAASC,GACtB,OACI,kBAACC,EAAA,EAAD,CAAUC,GAAItB,EAA2BuB,QAAQ,OAAOC,eAAa,EAACC,IAAKL,GACvE,kBAACb,EAAA,EAAD,CAAMC,UAAU,MAAMkB,gBAAc,EAAC5D,UAAWC,IAAO4D,SACnD,kBAAEd,EAAA,EAAF,CAAWC,QAAM,EAACC,QAAS,kBA8BrBa,EA9BoDT,EAAQU,UA+BtF/B,IAA6B8B,IAC7B/C,EDpEuB,sBCoEe,CAAEmC,KAAM,KAC9CnC,ED3EmC,kCC2Ee,CAAEmC,KAAMY,IAC1D/C,ED/EmC,kCC+Ee,CAAEmC,KAAMY,IAC1D/C,EDlF8B,6BCkFe,CAAEG,KAAM4C,MAL7D,IAAkCA,IA7BF,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAAkB7C,MAAOA,GACrB,kBAAC8C,EAAA,EAAD,CAAUC,KAAK,MAAMC,QAASd,EAAQU,OAAS/B,KAFvD,KAIA,kBAACmB,EAAA,EAAD,CAAc7B,QAAS+B,EAAQU,aAQvD,kBAAChB,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAMlC,EDnDA,+BCmD+C,CAAEmC,MAAOf,MACpF,kBAACgB,EAAA,EAAD,CAAcnD,UAAWC,IAAO6C,cAAexB,QAAQ,WAD3D,IACwEa,EAA4B,kBAAE,IAAF,MAAkB,kBAAE,IAAF,MADtH,KAIIF,EAAWmC,MAAMhC,EAAuBC,GAAwBe,KAAI,SAACC,EAASC,GAC1E,OACI,kBAACC,EAAA,EAAD,CAAUC,GAAIrB,EAA2BsB,QAAQ,OAAOC,eAAa,EAACC,IAAKL,GACvE,kBAACb,EAAA,EAAD,CAAMC,UAAU,MAAMkB,gBAAc,EAAC5D,UAAWC,IAAO4D,SAAvD,IAmBxB,SAA6BR,EAASC,GAClC,OAAIrB,EAAWmC,MAAMhC,EAAuBC,GAAwBG,OAAS,IAAMc,EAE3E,kBAACP,EAAA,EAAD,KACI,kBAACtC,EAAA,EAAD,CAAKT,UAAWC,IAAOoE,2BACnB,kBAACC,EAAA,EAAD,CAAQzD,QAAQ,YAAYb,UAAWC,IAAOsE,eAAgBtB,QAAS,WA8BvFlC,ED/G4B,uBC+GW,CAAEmC,KAAM,CAAEsB,KAAMpC,GAAyB,GAAIqC,MAAOpC,EAAyB,OA9BIqC,SAAoC,IAA1BtC,EAC9GuC,UAAW,kBAAC,IAAD,QAEf,kBAACL,EAAA,EAAD,CAAQzD,QAAQ,YAAYb,UAAWC,IAAO2E,WAAY3B,QAAS,WAwBnFlC,ED5G4B,uBC4GW,CAAEmC,KAAM,CAAEsB,KAAMpC,EAAwB,GAAIqC,MAAOpC,EAAyB,OAxBHqC,SAAUrC,GAA0BJ,EAAWO,OAC3IqC,QAAS,kBAAC,IAAD,UAOrB,kBAAC9B,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAsBtC,SAA4B6B,GACxB,IAAMC,EAAezC,EAAe0C,QAAQF,GACtCG,EAAiB,YAAO3C,IAER,IAAlByC,EAAqBE,EAAkBC,KAAKJ,GAC3CG,EAAkBE,OAAOJ,EAAc,GAE5ChE,EDxH2B,sBCwHW,CAAEmC,KAAM+B,IAC9ClE,EDpIkC,6BCoIW,CAAEG,KAAMc,EAA0BoD,MAAOH,IA9B9CI,CAAmBhC,EAAQU,QACvD,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAkB7C,MAAOA,GACrB,kBAAC8C,EAAA,EAAD,CACIC,KAAK,MACLC,SAAmD,IAA1C7B,EAAe0C,QAAQ3B,EAAQU,UAIpD,kBAACZ,EAAA,EAAD,CAAc7B,QAAS+B,EAAQU,QA5C4CuB,CAAoBjC,EAASC,GAAhG,a,mDE9D5B,IAQeiC,EAFO7D,aANE,SAAC,GAAD,MAAuC,CAC3DE,YADoB,EAAGA,YACVD,eADO,EAAgBA,mBAIb,SAACE,GAAD,OAAcC,YAAmB,CAAEf,oBAAoBc,KAE5DH,ECGP,YAAkE,IAAlDE,EAAiD,EAAjDA,YAAaD,EAAoC,EAApCA,eAAgBZ,EAAoB,EAApBA,iBAGhDyE,EAA8B5D,EAA9B4D,SAAUC,EAAoB7D,EAApB6D,eACVC,EAA2D/D,EAA3D+D,YAAa1D,EAA8CL,EAA9CK,yBAA0BM,EAAoBX,EAApBW,eAS/C,OARAqD,QAAQC,IAAIH,GAGZlD,qBAAU,WACkB,IAApBiD,EAAShD,QAAczB,EJzBL,qBI8BtB,kBAACN,EAAA,EAAD,KACI,kBAACoF,EAAA,EAAD,CAAMnF,WAAS,EAACoF,QAAS,GAGjBN,EAAShD,OAAS,EACdgD,EAASpC,KAAI,SAACC,EAASC,GACnB,OACI,kBAACuC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGxC,IAAKL,GACzC,kBAAC8C,EAAA,EAAD,CAAOpG,UAAWC,IAAOoG,OACrB,kBAAC5F,EAAA,EAAD,CAAKT,UAAWC,IAAOqG,mBACnB,yBAAKlG,IAAKiD,EAAQkD,OAAO/D,OAAS,EAAIa,EAAQkD,OAAO,GAAGC,MAAQC,IAAUzG,UAAWC,IAAOyG,SAAUpG,IAAI,YAE9G,kBAACG,EAAA,EAAD,CAAKT,UAAWC,IAAO0G,eAAgBtD,EAAQU,MAC/C,kBAACtD,EAAA,EAAD,CAAKT,UAAWC,IAAO2G,gBAAiBvD,EAAQwD,OAAOvF,cAMvE,kBAACb,EAAA,EAAD,gBAGR,kBAACoF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACnC,kBAAC1F,EAAA,EAAD,CAAKT,UAAWC,IAAO6G,0BACnB,kBAACxC,EAAA,EAAD,CAAQzD,QAAQ,YAAYb,UAAWC,IAAO8G,mBAAoBpC,UAAW,kBAAC,IAAD,MAAwB1B,QAAS,kBAuB9HlC,EJ/DwB,mBI+DW,CAAEmC,KAAMwC,EAAc,SACzD3E,EJ5EkC,6BI4EW,CAAEG,KAAMc,EAA0BoD,MAAO9C,EAAgB0E,KAAMtB,EAAc,KAvBtGhB,SAA0B,IAAhBgB,GADd,YAKA,kBAACpB,EAAA,EAAD,CAAQzD,QAAQ,YAAYb,UAAWC,IAAOgH,eAAgBpC,QAAS,kBAAC,IAAD,MAAsB5B,QAAS,kBAatHlC,EJ1DwB,mBI0DW,CAAEmC,KAAMwC,EAAc,SACzD3E,EJvEkC,6BIuEW,CAAEG,KAAMc,EAA0BoD,MAAO9C,EAAgB0E,KAAMtB,EAAc,KAbtGhB,SAAUgB,IAAgBD,EAAeyB,aAD7C,e,qECpDxB,IAQeC,GAFiBzF,aANR,SAAC,GAAD,MAA0B,CAC9CC,eADoB,EAAGA,mBAIA,SAACE,GAAD,OAAcC,YAAmB,CAAEf,oBAAoBc,KAElDH,ECFjB,YAAqD,IAArCC,EAAoC,EAApCA,eAAgBZ,EAAoB,EAApBA,iBAGnCiB,EAA8CL,EAA9CK,yBAA0BM,EAAoBX,EAApBW,eAElC,OACI,oCAEQA,EAAeE,OAAS,EACpB,oCACI,kBAAC4E,GAAA,EAAD,CAAYpH,UAAWC,KAAOoH,cAA9B,mBAEI/E,EAAec,KAAI,SAAC0B,EAAOxB,GAAR,OACf,kBAACgB,EAAA,EAAD,CAAQzD,QAAQ,YAAY8C,IAAKL,EAAOuB,QAAS,kBAAC,KAAD,CAAW7E,UAAWC,KAAOqH,sBAAyBtH,UAAWC,KAAOsH,gBACrHtE,QAAS,kBAezC,SAAsB6B,GAClB,IAAMC,EAAezC,EAAe0C,QAAQF,GACtCG,EAAiB,YAAO3C,IAER,IAAlByC,EAAqBE,EAAkBC,KAAKJ,GAC3CG,EAAkBE,OAAOJ,EAAc,GAE5ChE,ENlC2B,sBMkCW,CAAEmC,KAAM+B,IAC9ClE,EN9CkC,6BM8CW,CAAEG,KAAMc,EAA0BoD,MAAOH,IAvB3CuC,CAAa1C,KAC3BA,MAIb,kBAACR,EAAA,EAAD,CAAQzD,QAAQ,OAAOgE,QAAS,kBAAC,KAAD,CAAY7E,UAAWC,KAAOwH,eAAkBzH,UAAWC,KAAOyH,eAAgBzE,QAAS,kBAsB3IlC,ENvC2B,sBMuCW,CAAEmC,KAAM,UAC9CnC,ENnDkC,6BMmDW,CAAEG,KAAMc,EAA0BoD,MAAO,OAvBtE,cAKJ,yCCGLuC,OA5Bf,YAGE,OAHkC,EAArBC,kBAELC,QACY,kBAACrH,EAAD,MAIlB,kBAACC,EAAA,EAAD,CAAKT,UAAWC,IAAO6H,eACrB,kBAAC,EAAD,MAEA,kBAACrH,EAAA,EAAD,CAAKT,UAAWC,IAAO8H,cAErB,kBAACtH,EAAA,EAAD,CAAKT,UAAWC,IAAO+H,iBACrB,kBAAC,EAAD,OAGF,kBAACvH,EAAA,EAAD,CAAKT,UAAWC,IAAOgI,eACrB,kBAACC,GAAD,MACA,kBAAC,EAAD,UCpBKC,GAFMzG,aAJG,SAAC,GAAD,MAA4B,CAChDkG,kBADoB,EAAGA,qBAINlG,CAAyBiG,I,QCPxCS,GAAe,CACjB5C,SAAU,GACVC,eAAgB,ICEpB,IAAM2C,GAAe,CACjBrG,YAAa,GACbE,WAAY,GACZD,yBAA0B,GAC1BE,2BAA2B,EAC3BC,2BAA2B,EAC3BC,sBAAuB,EACvBC,uBAAwB,GACxBC,eAAgB,GAChBoD,YAAa,GCdjB,IAAM0C,GAAe,CACjBP,SAAS,GCKEQ,mBAAgB,CAC3BzG,YHDW,WAAoD,IAA/B0G,EAA8B,uDAAtBF,GAAcpH,EAAQ,uCAE9D,OAAQA,EAAOE,MAEX,ITPwB,mBSQxB,ITNqC,gCSOjC,OAAO,6BACAoH,GADP,IAEI9C,SAAUxE,EAAOC,QAAQsH,QACzB9C,eAAgBzE,EAAOC,QAAQuH,aAIvC,QACI,OAAOF,IGZf3G,eFSW,WAAuD,IAA/B2G,EAA8B,uDAAtBF,GAAcpH,EAAQ,uCAEjE,OAAQA,EAAOE,MAEX,IVpBgC,2BUqB5B,OAAO,6BACAoH,GADP,IAEIvG,YAAaf,EAAOC,QAAQwH,QAGpC,IVlBuC,kCUmBnC,OAAO,6BACAH,GADP,IAEItG,yBAA0BhB,EAAOC,QAAQiC,OAGjD,IV1ByC,oCU2BrC,OAAO,6BACAoF,GADP,IAEIrG,WAAYjB,EAAOC,QAAQ4F,SAGnC,IV3BmC,8BU4B/B,OAAO,6BACAyB,GADP,IAEIpG,0BAA2BlB,EAAOC,QAAQiC,OAGlD,IVhCoC,+BUiChC,OAAO,6BACAoF,GADP,IAEInG,0BAA2BnB,EAAOC,QAAQiC,OAGlD,IVrC4B,uBUsCxB,OAAO,6BACAoF,GADP,IAEIlG,sBAAuBpB,EAAOC,QAAQiC,KAAKsB,KAC3CnC,uBAAwBrB,EAAOC,QAAQiC,KAAKuB,QAGpD,IV3C2B,sBU4CvB,OAAO,6BACA6D,GADP,IAEIhG,eAAgBtB,EAAOC,QAAQiC,OAGvC,IVhDwB,mBUiDpB,OAAO,6BACAoF,GADP,IAEI5C,YAAa1E,EAAOC,QAAQiC,OAGpC,QACI,OAAOoF,IE9DfV,kBDLW,WAA0D,IAA/BU,EAA8B,uDAAtBF,GAAcpH,EAAQ,uCAEpE,OAAQA,EAAOE,MACX,IXIwB,mBWHpB,OAAO,6BACAoH,GADP,IAEIT,SAAS,IAGjB,IXHuB,kBWInB,OAAO,6BACAS,GADP,IAEIT,SAAS,IAGjB,QACI,OAAOS,M,SEbbI,GAAiBC,e,+CCNVC,GAAU,qDACVC,GAAa,2CCFbC,GAAW,kBAAMC,aAAaC,QAAQ,QAAS,aAI/CC,GAAwB,SAACC,EAAKC,GAEvC,IAAIC,EAAS,IAAIC,IAAIH,GAUrB,OARAI,OAAOC,KAAKJ,GAAcK,SAAQ,SAAA7F,GAEK,kBAAvBwF,EAAaxF,GACrByF,EAAOK,aAAaC,OAAO/F,EAA3B,YAAoCwF,EAAaxF,KAEhDyF,EAAOK,aAAaC,OAAO/F,EAAKwF,EAAaxF,OAG/CyF,GCZI,SAAeO,GAA9B,uC,gDAAe,WAAuBT,EAAKU,EAAQ1G,GAApC,oBAAA2G,EAAA,yDFLY,SEOnBD,EAFO,wBAIHE,EAAW,IAAIC,UACVL,OAAO,aAAc,sBAC9BI,EAASJ,OAAO,YAAad,IAC7BkB,EAASJ,OAAO,gBAAiBb,IAP1B,SASMmB,MAAMd,EAAK,CACpBU,SACAK,KAAMH,IACPI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAZtB,mDFJW,QEkBXR,EAdA,wBAgBHS,EAAQvB,KACRM,EAAS,IAAIC,IAAIH,GACjBhG,IACAkG,EAASH,GAAsBC,EAAKhG,IAnBjC,UAsBM8G,MAAMZ,EAAQ,CACvBQ,SACAU,QAAS,CACLC,cAAc,UAAD,OAAYF,MAE9BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UA3BtB,sF,uCCSEI,I,aAgBAC,I,aAoBQC,IApClB,SAAUF,KAAV,wEAGC,OAHD,kBAGOG,aAAI,CAAEzJ,KjBNW,oBiBGxB,OAKiB,OALjB,SAKuB0J,aAAKjB,GHXE,sCAPX,OGanB,YAKO1I,EALP,QAMa4J,MANb,iBAMoB,OANpB,SAM0BlF,QAAQC,IAAI3E,GANtC,+BAOM,OAPN,UAOY0J,aAAI,CAAEzJ,KjBnBe,2BiBmBiBD,YAPlD,QASC,OATD,UASO0J,aAAI,CAAEzJ,KjBXY,qBiBEzB,gCAYC,OAZD,oCAYOyJ,aAAI,CAAEzJ,KjBRK,YiBQYD,QAAS,CAAE6J,QAAS,KAAUA,QAASC,iBjBzBtC,4BiBa/B,uDAgBA,SAAUN,GAA8BzJ,GAAxC,0EAKC,OALD,SAGKgK,EHxBwB,mDGwBwBC,QAAQ,SAAUjK,EAAOC,QAAQiC,MAHtF,SAKOyH,aAAI,CAAEzJ,KjBxBW,oBiBmBxB,OAOiB,OAPjB,SAOuB0J,aAAKjB,GAASqB,EHpClB,OG6BnB,YAOO/J,EAPP,QASa4J,MATb,iBASoB,OATpB,UAS0BlF,QAAQC,IAAI3E,GATtC,gCAUM,OAVN,UAUY0J,aAAI,CAAEzJ,KjBhCwB,oCiBgCiBD,YAV3D,QAYC,OAZD,UAYO0J,aAAI,CAAEzJ,KjB9BY,qBiBkBzB,gCAeC,OAfD,oCAeOyJ,aAAI,CAAEzJ,KjB3BK,YiB2BYD,QAAS,CAAE6J,QAAS,KAAUA,QAASC,iBjBtC7B,qCiBuBxC,uDAoBQ,SAAUL,KAAV,kEACX,OADW,SACLQ,ajBlD4B,yBiBkDOV,IAD9B,OAEX,OAFW,SAELU,ajB7CqC,kCiB6COT,IAFvC,wC,iBCpCEU,I,aAyBQC,IAzBlB,SAAUD,GAAYnK,GAAtB,oFAIgC,oBAA3BA,EAAOC,QAAQ6J,SAAyD,4BAAxB9J,EAAOC,QAAQoK,KAJpE,iBAMqB,OANrB,SAM2BT,aAAKjB,GJdV,6CANF,QIcpB,OAOK,OADM1I,EANX,gBHfmBoJ,EGsBEpJ,EAAQqK,aHtBAvC,aAAawC,QAAQ,QAASlB,GGe3D,WAUSrJ,EAAOC,QAAQD,OAVxB,iBAUgC,OAVhC,UAUsC2J,aAAI,CAAEzJ,KAAMF,EAAOC,QAAQ8J,iBAAkB/J,OAAQA,EAAOC,QAAQD,SAV1G,gCAWU,OAXV,UAWgB2J,aAAI,CAAEzJ,KAAMF,EAAOC,QAAQ8J,mBAX3C,gCAeKS,MAAM,oBACN7F,QAAQC,IAAI5E,EAAOC,SAhBxB,0DAoBC0E,QAAQC,IAAR,MApBD,kCHfkB,IAACyE,IGenB,kBAyBQ,SAAUe,KAAV,kEACX,OADW,SACLK,alBtBe,YkBsBQN,IADlB,wC,iBCzBEO,I,aAgBAC,I,aAkBQC,IAlClB,SAAUF,KAAV,wEAGC,OAHD,kBAGOf,aAAI,CAAEzJ,KnBNW,oBmBGxB,OAKiB,OALjB,SAKuB0J,aAAKjB,GLZJ,wCANL,OKanB,YAKO1I,EALP,QAMa4K,OANb,iBAMqBlB,aAAI,CAAEzJ,KnBFT,YmBE0BD,QAAQ,6BAAMA,GAAP,IAAgB8J,iBnBjB5C,qBmBWvB,wBAOM,OAPN,UAOYJ,aAAI,CAAEzJ,KnBjBO,mBmBiBiBD,YAP1C,QASC,OATD,UASO0J,aAAI,CAAEzJ,KnBXY,qBmBEzB,gCAYC,OAZD,oCAYOyJ,aAAI,CAAEzJ,KnBRK,YmBQYD,QAAS,CAAE6J,QAAS,KAAUA,QAASC,iBnBvB9C,oBmBWvB,uDAgBA,SAAUY,GAAkB3K,GAA5B,wEAGC,OAHD,kBAGO2J,aAAI,CAAEzJ,KnBtBW,oBmBmBxB,OAKiB,OALjB,SAKuB0J,aAAKjB,GL5BJ,wCANL,MKkC+C3I,EAAOC,SALzE,YAKOA,EALP,QAOa4K,OAPb,iBAOqBlB,aAAI,CAAEzJ,KnBnBT,YmBmB0BD,QAAQ,6BAAMA,GAAP,IAAgB8J,iBnBhChC,6BmBgC8E/J,aAPjH,wBAQM,OARN,UAQY2J,aAAI,CAAEzJ,KnBhCoB,gCmBgCiBD,YARvD,QAUC,OAVD,UAUO0J,aAAI,CAAEzJ,KnB5BY,qBmBkBzB,gCAaC,OAbD,oCAaOyJ,aAAI,CAAEzJ,KnBzBK,YmByBYD,QAAS,CAAE6J,QAAS,KAAUA,QAASC,iBnBtClC,gCmByBnC,uDAkBQ,SAAUa,KAAV,kEACX,OADW,SACLV,anB9CoB,iBmB8COQ,IADtB,OAEX,OAFW,SAELR,anB7CgC,6BmB6COS,IAFlC,wC,iBCzCUG,IAAV,SAAUA,KAAV,kEACX,OADW,SACLC,aAAI,CAACrB,KAAWU,KAAUQ,OADrB,wCCGf,IAAII,GRCO,6BACAC,YAAYC,GAAiBC,YAAgBzD,MADpD,IAEI0D,QAAS1D,GAAe2D,MQFhCL,GAAMI,QAAQN,IAEdQ,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,GAAD,OACWQ,SAASC,eAAe,W","file":"static/js/main.116cb5ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedBreeds\":\"css_selectedBreeds__1Ki-g\",\"mainListTitle\":\"css_mainListTitle__22ezu\",\"mainList\":\"css_mainList__1jASM\",\"subList\":\"css_subList__a6dGT\",\"directionsArrowsContainer\":\"css_directionsArrowsContainer__1hOjY\",\"nextButton\":\"css_nextButton__3Nw9h\",\"previousButton\":\"css_previousButton__2dmdI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"css_paper__3ruKn\",\"petImageContainer\":\"css_petImageContainer__2p_o5\",\"petImage\":\"css_petImage__3P6qz\",\"nameContainer\":\"css_nameContainer__3TKD5\",\"breedContainer\":\"css_breedContainer__G2Dma\",\"directionButtonContainer\":\"css_directionButtonContainer__1apwz\",\"nextPageButton\":\"css_nextPageButton__1OUAp\",\"previousPageButton\":\"css_previousPageButton__2AWrQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filtersTitle\":\"css_filtersTitle__aA70Y\",\"filtersSelected\":\"css_filtersSelected__MWeav\",\"filtersSelectedIcon\":\"css_filtersSelectedIcon__39lrM\",\"clearAllButton\":\"css_clearAllButton__nVG10\",\"clearAllIcon\":\"css_clearAllIcon__2yEkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"css_mainContainer__366yK\",\"subContainer\":\"css_subContainer__3oumP\",\"filterContainer\":\"css_filterContainer__2U5qP\",\"dataContainer\":\"css_dataContainer__2RSGw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appbar\":\"css_appbar__3fe3V\",\"logo\":\"css_logo__8nphV\"};","module.exports = __webpack_public_path__ + \"static/media/logo.d1339207.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"css_container__3EG3U\"};","module.exports = __webpack_public_path__ + \"static/media/pet.4f325f55.png\";","/* React */\r\nimport React from 'react';\r\n\r\n/* Material-ui */\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n\r\n/* Components */\r\nimport AppLogo from '../../Imgs/logo.png'\r\nimport styles from './css.module.css';\r\n\r\nexport default function MyAppBar() {\r\n    return (\r\n        <AppBar position=\"static\" className={styles.appbar}>\r\n            <Toolbar>\r\n                <img src={AppLogo} alt=\"Logo\" className={styles.logo}></img>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","/* React */\r\nimport React from 'react';\r\n\r\n/* Material-ui */\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n/* Components */\r\nimport styles from './css.module.css';\r\n\r\nexport default function ProgressOn() {\r\n    return (\r\n        <Box className={styles.container}>\r\n            <CircularProgress disableShrink={true} variant=\"indeterminate\" size={60} />\r\n        </Box>\r\n    );\r\n}\r\n","export const GET_NEW_TOKEN_BEGIN = \"GET_NEW_TOKEN_BEGIN\";\r\nexport const GET_NEW_TOKEN_SUCCESS = \"GET_NEW_TOKEN_SUCCESS\";\r\nexport const GET_ANIMAL_TYPES_BEGIN = \"GET_ANIMAL_TYPES_BEGIN\";\r\nexport const GET_ANIMAL_TYPES_SUCCESS = \"GET_ANIMAL_TYPES_SUCCESS\";\r\nexport const GET_PETS_BEGIN = \"GET_PETS_BEGIN\";\r\nexport const GET_PETS_SUCCESS = \"GET_PETS_SUCCESS\";\r\nexport const GET_PETS_WITH_FILTER_BEGIN = \"GET_PETS_WITH_FILTER_BEGIN\";\r\nexport const GET_PETS_WITH_FILTERS_SUCCESS = \"GET_PETS_WITH_FILTERS_SUCCESS\";\r\nexport const GET_BREEDS_BY_ANIMAL_TYPE_BEGIN = \"GET_BREEDS_BY_ANIMAL_TYPE_BEGIN\";\r\nexport const GET_BREEDS_BY_ANIMAL_TYPE_SUCCESS = \"GET_BREEDS_BY_ANIMAL_TYPE_SUCCESS\";\r\n\r\nexport const SET_SELECTED_ANIMAL_TYPE_FILTER = \"SET_SELECTED_ANIMAL_TYPE_FILTER\";\r\nexport const SET_PROGRESS_ON = \"SET_PROGRESS_ON\";\r\nexport const SET_PROGRESS_OFF = \"SET_PROGRESS_OFF\";\r\nexport const SET_ANIMALS_TYPES_COLLAPSED = \"SET_ANIMALS_TYPES_COLLAPSED\";\r\nexport const SET_ANIMALS_BREEDS_COLLAPSED = \"SET_ANIMALS_BREEDS_COLLAPSED\";\r\nexport const SET_SHOW_MORE_BREEDS = \"SET_SHOW_MORE_BREEDS\";\r\nexport const SET_BREEDS_SELECTED = \"SET_BREEDS_SELECTED\";\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nexport const NEW_ERROR = \"NEW_ERROR\";\r\n\r\nexport const actionDispatcher = (action, payload) => ({\r\n    type: action,\r\n    payload\r\n});\r\n","/* React */\r\nimport React, { useEffect } from 'react';\r\n\r\n/* Material-ui */\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Checkbox from '@material-ui/core/CheckBox';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\n\r\n\r\n/* Redux-actions */\r\nimport {\r\n    GET_ANIMAL_TYPES_BEGIN, SET_SELECTED_ANIMAL_TYPE_FILTER, GET_BREEDS_BY_ANIMAL_TYPE_BEGIN, SET_ANIMALS_TYPES_COLLAPSED,\r\n    SET_ANIMALS_BREEDS_COLLAPSED, SET_SHOW_MORE_BREEDS, GET_PETS_WITH_FILTER_BEGIN, SET_BREEDS_SELECTED,\r\n} from '../../Redux/Actions';\r\n\r\n/* Components */\r\nimport styles from './css.module.css';\r\n\r\nexport default function Filters({ filtersReducer, actionDispatcher }) {\r\n\r\n    /* Store data */\r\n    const { animalTypes, selectedAnimalTypeFilter, petsBreeds, showAnimalsTypesCollapsed,\r\n        showANimalBreedsCollapsed, animalsBreedsShowFrom, animalsBreedsShowUntil, breedsSelected, } = filtersReducer;\r\n\r\n    /* Hooks */\r\n    useEffect(() => {\r\n        if (animalTypes.length === 0) actionDispatcher(GET_ANIMAL_TYPES_BEGIN);\r\n    });\r\n\r\n    return (\r\n        <List component=\"nav\"\r\n            className={styles.mainList}\r\n            subheader={<ListSubheader component=\"div\" className={styles.mainListTitle}>Filters</ListSubheader>}>\r\n\r\n            <ListItem button onClick={() => actionDispatcher(SET_ANIMALS_TYPES_COLLAPSED, { data: !showAnimalsTypesCollapsed })} >\r\n                <ListItemText className={styles.mainListTitle} primary=\"Type\" /> {showAnimalsTypesCollapsed ? < ExpandLess /> : < ExpandMore />} </ListItem>\r\n            {\r\n                animalTypes.map((currObj, index) => {\r\n                    return (\r\n                        <Collapse in={showAnimalsTypesCollapsed} timeout=\"auto\" unmountOnExit key={index} >\r\n                            <List component=\"div\" disablePadding className={styles.subList} >\r\n                                < ListItem button onClick={() => handleAnimalTypeSelected(currObj.name)} >\r\n                                    <ListItemIcon >\r\n                                        <MuiThemeProvider theme={theme} >\r\n                                            <Checkbox edge=\"end\" checked={currObj.name === selectedAnimalTypeFilter} />\r\n                                        </MuiThemeProvider> </ListItemIcon>\r\n                                    <ListItemText primary={currObj.name} />\r\n                                </ListItem>\r\n                            </List>\r\n                        </Collapse>\r\n                    )\r\n                })\r\n            }\r\n\r\n            <ListItem button onClick={() => actionDispatcher(SET_ANIMALS_BREEDS_COLLAPSED, { data: !showANimalBreedsCollapsed })} >\r\n                <ListItemText className={styles.mainListTitle} primary=\"Breeds\" /> {showANimalBreedsCollapsed ? < ExpandLess /> : < ExpandMore />} </ListItem>\r\n\r\n            {\r\n                petsBreeds.slice(animalsBreedsShowFrom, animalsBreedsShowUntil).map((currObj, index) => {\r\n                    return (\r\n                        <Collapse in={showANimalBreedsCollapsed} timeout=\"auto\" unmountOnExit key={index} >\r\n                            <List component=\"div\" disablePadding className={styles.subList} > {renderAnimalsBreeds(currObj, index,)} </List>\r\n                        </Collapse>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </List>\r\n\r\n    )\r\n\r\n    function handleAnimalTypeSelected(typeSelected) {\r\n        if (selectedAnimalTypeFilter !== typeSelected) {\r\n            actionDispatcher(SET_BREEDS_SELECTED, { data: [] });//clean breeds already selected\r\n            actionDispatcher(SET_SELECTED_ANIMAL_TYPE_FILTER, { data: typeSelected });\r\n            actionDispatcher(GET_BREEDS_BY_ANIMAL_TYPE_BEGIN, { data: typeSelected });\r\n            actionDispatcher(GET_PETS_WITH_FILTER_BEGIN, { type: typeSelected });\r\n        }\r\n    }\r\n\r\n    function renderAnimalsBreeds(currObj, index,) {\r\n        if (petsBreeds.slice(animalsBreedsShowFrom, animalsBreedsShowUntil).length - 1 === index) {\r\n            return (\r\n                <ListItem >\r\n                    <Box className={styles.directionsArrowsContainer}>\r\n                        <Button variant=\"contained\" className={styles.previousButton} onClick={() => onPreviousButtonClicked()} disabled={animalsBreedsShowFrom === 0}\r\n                            startIcon={<NavigateBeforeIcon />}>\r\n                        </Button>\r\n                        <Button variant=\"contained\" className={styles.nextButton} onClick={() => onNextButtonClicked()} disabled={animalsBreedsShowUntil >= petsBreeds.length}\r\n                            endIcon={<NavigateNextIcon />}>\r\n                        </Button>\r\n                    </Box>\r\n                </ListItem>\r\n            )\r\n        } else {\r\n            return (\r\n                <ListItem button onClick={() => handleBreedsToogle(currObj.name)}>\r\n                    <ListItemIcon>\r\n                        <MuiThemeProvider theme={theme}>\r\n                            <Checkbox\r\n                                edge=\"end\"\r\n                                checked={breedsSelected.indexOf(currObj.name) !== -1}\r\n                            />\r\n                        </MuiThemeProvider>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={currObj.name} />\r\n                </ListItem>\r\n            )\r\n        }\r\n    }\r\n\r\n    function onNextButtonClicked() {\r\n        actionDispatcher(SET_SHOW_MORE_BREEDS, { data: { from: animalsBreedsShowFrom + 10, until: animalsBreedsShowUntil + 10 } })\r\n    }\r\n    function onPreviousButtonClicked() {\r\n        actionDispatcher(SET_SHOW_MORE_BREEDS, { data: { from: animalsBreedsShowFrom + -10, until: animalsBreedsShowUntil - 10 } })\r\n    }\r\n\r\n    function handleBreedsToogle(value) {\r\n        const currentIndex = breedsSelected.indexOf(value);\r\n        const newBreedsSelected = [...breedsSelected];\r\n\r\n        if (currentIndex === -1) newBreedsSelected.push(value);\r\n        else newBreedsSelected.splice(currentIndex, 1);\r\n\r\n        actionDispatcher(SET_BREEDS_SELECTED, { data: newBreedsSelected });\r\n        actionDispatcher(GET_PETS_WITH_FILTER_BEGIN, { type: selectedAnimalTypeFilter, breed: newBreedsSelected });\r\n    }\r\n\r\n}\r\n\r\n/* Overrides Mui default theme */\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#000\"\r\n        },\r\n        secondary: {\r\n            main: \"#000\"\r\n        },\r\n    }\r\n});","/* Redux */\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\n/* Redux-actions */\r\nimport { actionDispatcher } from '../../Redux/Actions';\r\n\r\n\r\n/* Components */\r\nimport view from \"./view\";\r\n\r\nconst mapStateToProps = ({ filtersReducer, petsReducer, }) => ({\r\n    filtersReducer, petsReducer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ actionDispatcher }, dispatch);\r\n\r\nconst FiltersContainer = connect(mapStateToProps, mapDispatchToProps)(view);\r\n\r\nexport default FiltersContainer;\r\n","/* Redux */\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\n/* Redux-actions */\r\nimport { actionDispatcher } from '../../Redux/Actions';\r\n\r\n\r\n/* Components */\r\nimport view from \"./view\";\r\n\r\nconst mapStateToProps = ({ petsReducer, filtersReducer, }) => ({\r\n    petsReducer, filtersReducer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ actionDispatcher }, dispatch);\r\n\r\nconst PetsContainer = connect(mapStateToProps, mapDispatchToProps)(view);\r\n\r\nexport default PetsContainer;\r\n","/* React */\r\nimport React, { useEffect } from 'react';\r\n\r\n/* Material-ui */\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\n\r\n/* Redux-actions */\r\nimport { GET_PETS_BEGIN, GET_PETS_WITH_FILTER_BEGIN, SET_CURRENT_PAGE, } from '../../Redux/Actions';\r\n\r\n/* Components */\r\nimport styles from './css.module.css';\r\n\r\n/* Images */\r\nimport PetImage from '../../Imgs/pet.png'\r\n\r\nexport default function Pets({ petsReducer, filtersReducer, actionDispatcher }) {\r\n\r\n    /* Store data */\r\n    const { petsData, petsPagination, } = petsReducer;\r\n    const { currentPage, selectedAnimalTypeFilter, breedsSelected, } = filtersReducer;\r\n    console.log(petsPagination)\r\n\r\n    /* Hooks */\r\n    useEffect(() => {\r\n        if (petsData.length === 0) actionDispatcher(GET_PETS_BEGIN);\r\n    });\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={3} >\r\n\r\n                {\r\n                    petsData.length > 0 ?\r\n                        petsData.map((currObj, index) => {\r\n                            return (\r\n                                <Grid item xs={12} sm={6} md={6} lg={4} key={index}>\r\n                                    <Paper className={styles.paper}>\r\n                                        <Box className={styles.petImageContainer}>\r\n                                            <img src={currObj.photos.length > 0 ? currObj.photos[0].large : PetImage} className={styles.petImage} alt=\"petImg\" />\r\n                                        </Box>\r\n                                        <Box className={styles.nameContainer}>{currObj.name}</Box>\r\n                                        <Box className={styles.breedContainer}>{currObj.breeds.primary}</Box>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                        :\r\n                        <Box>No data</Box>\r\n                }\r\n\r\n                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                    <Box className={styles.directionButtonContainer}>\r\n                        <Button variant=\"contained\" className={styles.previousPageButton} startIcon={<NavigateBeforeIcon />} onClick={() => onPreviousPageClicked()}\r\n                            disabled={currentPage === 1}>\r\n                            Previous\r\n                        </Button>\r\n\r\n                        <Button variant=\"contained\" className={styles.nextPageButton} endIcon={<NavigateNextIcon />} onClick={() => onNextPageClicked()}\r\n                            disabled={currentPage === petsPagination.total_pages}>\r\n                            Next\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </Box>\r\n    )\r\n\r\n    function onNextPageClicked() {\r\n        actionDispatcher(SET_CURRENT_PAGE, { data: currentPage + 1 });\r\n        actionDispatcher(GET_PETS_WITH_FILTER_BEGIN, { type: selectedAnimalTypeFilter, breed: breedsSelected, page: currentPage + 1 });\r\n    }\r\n\r\n    function onPreviousPageClicked() {\r\n        actionDispatcher(SET_CURRENT_PAGE, { data: currentPage - 1 });\r\n        actionDispatcher(GET_PETS_WITH_FILTER_BEGIN, { type: selectedAnimalTypeFilter, breed: breedsSelected, page: currentPage - 1 });\r\n    }\r\n}","/* Redux */\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\n/* Redux-actions */\r\nimport { actionDispatcher } from '../../Redux/Actions';\r\n\r\n\r\n/* Components */\r\nimport view from \"./view\";\r\n\r\nconst mapStateToProps = ({ filtersReducer, }) => ({\r\n    filtersReducer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ actionDispatcher }, dispatch);\r\n\r\nconst FiltersAppliedContainer = connect(mapStateToProps, mapDispatchToProps)(view);\r\n\r\nexport default FiltersAppliedContainer;\r\n","/* React */\r\nimport React from 'react';\r\n\r\n/* Material-ui */\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\n/* Components */\r\nimport styles from './css.module.css';\r\n\r\n/* Redux-actions */\r\nimport { SET_BREEDS_SELECTED, GET_PETS_WITH_FILTER_BEGIN, } from '../../Redux/Actions';\r\n\r\nexport default function Pets({ filtersReducer, actionDispatcher }) {\r\n\r\n    /* Store data */\r\n    const { selectedAnimalTypeFilter, breedsSelected, } = filtersReducer;\r\n\r\n    return (\r\n        <>\r\n            {\r\n                breedsSelected.length > 0 ?\r\n                    <>\r\n                        <Typography className={styles.filtersTitle}>Filters applied</Typography>\r\n                        {\r\n                            breedsSelected.map((value, index) =>\r\n                                <Button variant=\"contained\" key={index} endIcon={<ClearIcon className={styles.filtersSelectedIcon} />} className={styles.filtersSelected}\r\n                                    onClick={() => deleteFilter(value)}>\r\n                                    {value}\r\n                                </Button>\r\n                            )\r\n                        }\r\n                        <Button variant=\"text\" endIcon={<DeleteIcon className={styles.clearAllIcon} />} className={styles.clearAllButton} onClick={() => deleteAllFilters()}>\r\n                            Clear all\r\n                        </Button>\r\n                    </>\r\n                    :\r\n                    <></>\r\n            }\r\n        </>\r\n    )\r\n\r\n    function deleteFilter(value) {\r\n        const currentIndex = breedsSelected.indexOf(value);\r\n        const newBreedsSelected = [...breedsSelected];\r\n\r\n        if (currentIndex === -1) newBreedsSelected.push(value);\r\n        else newBreedsSelected.splice(currentIndex, 1);\r\n\r\n        actionDispatcher(SET_BREEDS_SELECTED, { data: newBreedsSelected });\r\n        actionDispatcher(GET_PETS_WITH_FILTER_BEGIN, { type: selectedAnimalTypeFilter, breed: newBreedsSelected });\r\n    }\r\n\r\n    function deleteAllFilters() {\r\n        actionDispatcher(SET_BREEDS_SELECTED, { data: [] });\r\n        actionDispatcher(GET_PETS_WITH_FILTER_BEGIN, { type: selectedAnimalTypeFilter, breed: [] });\r\n    }\r\n\r\n}","/* React */\r\nimport React from 'react';\r\n\r\n/* Material-ui */\r\nimport Box from '@material-ui/core/Box';\r\n\r\n/* Components */\r\nimport AppBar from '../Components/Appbar/view';\r\nimport styles from './css.module.css';\r\nimport ProgressOn from '../Components/ProgressOn/view';\r\nimport FiltersContainer from '../Components/FiltersSection';\r\nimport PetsContainer from '../Components/Pets/';\r\nimport FiltersAppliedContainer from '../Components/FiltersApplied';\r\n\r\nfunction App({ progressOnReducer }) {\r\n\r\n  const { visible } = progressOnReducer;\r\n  if (visible) return <ProgressOn />\r\n\r\n\r\n  return (\r\n    <Box className={styles.mainContainer}>\r\n      <AppBar />\r\n\r\n      <Box className={styles.subContainer}>\r\n\r\n        <Box className={styles.filterContainer}>\r\n          <FiltersContainer />\r\n        </Box>\r\n\r\n        <Box className={styles.dataContainer}>\r\n          <FiltersAppliedContainer />\r\n          <PetsContainer />\r\n        </Box>\r\n\r\n      </Box>\r\n\r\n    </Box>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","/* Redux */\r\nimport { connect } from \"react-redux\";\r\n\r\n/* Components */\r\nimport App from \"./App\";\r\n\r\nconst mapStateToProps = ({ progressOnReducer }) => ({\r\n    progressOnReducer\r\n});\r\n\r\nconst AppContainer = connect(mapStateToProps)(App);\r\n\r\nexport default AppContainer;\r\n","/* Redux-actions */\r\nimport { GET_PETS_SUCCESS, GET_PETS_WITH_FILTERS_SUCCESS, } from '../Actions';\r\n\r\nconst initialState = {\r\n    petsData: [],\r\n    petsPagination: {},\r\n}\r\n\r\nexport default function PetsReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_PETS_SUCCESS:\r\n        case GET_PETS_WITH_FILTERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                petsData: action.payload.animals,\r\n                petsPagination: action.payload.pagination,\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","/* Reduxñ-actions */\r\nimport {\r\n    GET_ANIMAL_TYPES_SUCCESS, SET_SELECTED_ANIMAL_TYPE_FILTER, GET_BREEDS_BY_ANIMAL_TYPE_SUCCESS,\r\n    SET_ANIMALS_TYPES_COLLAPSED, SET_ANIMALS_BREEDS_COLLAPSED, SET_SHOW_MORE_BREEDS, SET_BREEDS_SELECTED,\r\n    SET_CURRENT_PAGE,\r\n} from '../Actions';\r\n\r\nconst initialState = {\r\n    animalTypes: [],\r\n    petsBreeds: [],\r\n    selectedAnimalTypeFilter: \"\",\r\n    showAnimalsTypesCollapsed: true,\r\n    showANimalBreedsCollapsed: false,\r\n    animalsBreedsShowFrom: 0,\r\n    animalsBreedsShowUntil: 10,\r\n    breedsSelected: [],\r\n    currentPage: 1,\r\n}\r\n\r\nexport default function FiltersReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_ANIMAL_TYPES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                animalTypes: action.payload.types\r\n            }\r\n\r\n        case SET_SELECTED_ANIMAL_TYPE_FILTER:\r\n            return {\r\n                ...state,\r\n                selectedAnimalTypeFilter: action.payload.data\r\n            }\r\n\r\n        case GET_BREEDS_BY_ANIMAL_TYPE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                petsBreeds: action.payload.breeds\r\n            }\r\n\r\n        case SET_ANIMALS_TYPES_COLLAPSED:\r\n            return {\r\n                ...state,\r\n                showAnimalsTypesCollapsed: action.payload.data\r\n            }\r\n\r\n        case SET_ANIMALS_BREEDS_COLLAPSED:\r\n            return {\r\n                ...state,\r\n                showANimalBreedsCollapsed: action.payload.data\r\n            }\r\n\r\n        case SET_SHOW_MORE_BREEDS:\r\n            return {\r\n                ...state,\r\n                animalsBreedsShowFrom: action.payload.data.from,\r\n                animalsBreedsShowUntil: action.payload.data.until,\r\n            }\r\n\r\n        case SET_BREEDS_SELECTED:\r\n            return {\r\n                ...state,\r\n                breedsSelected: action.payload.data\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload.data\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_PROGRESS_OFF, SET_PROGRESS_ON } from '../Actions';\r\n\r\nconst initialState = {\r\n    visible: false\r\n}\r\n\r\nexport default function ProgressOnReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case SET_PROGRESS_OFF:\r\n            return {\r\n                ...state,\r\n                visible: false\r\n            }\r\n\r\n        case SET_PROGRESS_ON:\r\n            return {\r\n                ...state,\r\n                visible: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","/* Redux */\r\nimport { combineReducers } from 'redux';\r\n\r\n/* Reducers */\r\nimport petsReducer from './petsReducer';\r\nimport filtersReducer from './filtersReducer';\r\nimport progressOnReducer from './progressOnReducer';\r\n\r\nexport default combineReducers({\r\n    petsReducer,\r\n    filtersReducer,\r\n    progressOnReducer,\r\n});\r\n","/* Redux */\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\n/* Reducers */\r\nimport CombineReducers from '../Reducers/';\r\n\r\n/* Sagas */\r\nimport reduxSaga from 'redux-saga';\r\n\r\nconst sagaMiddleware = reduxSaga();\r\n\r\nexport default function configureStore() {\r\n    return {\r\n        ...createStore(CombineReducers, applyMiddleware(sagaMiddleware)),\r\n        runSaga: sagaMiddleware.run\r\n    }\r\n}\r\n","/* General */\r\nexport const POST_METHOD = \"POST\";\r\nexport const GET_METHOD = \"GET\";\r\nexport const API_KEY = \"QjZE3qZXQnpsJ2iAWJLCv4AaTGJO8r4ki71V6g3RLZ8ZBu4cuG\";\r\nexport const SECRET_KEY = \"9i1e56VXsfo1Kn0b2c73VdFlCWCLJuRwEXgqycxh\";\r\n\r\n/* Urls */\r\nexport const GET_TOKEN_URL = \"https://api.petfinder.com/v2/oauth2/token/\";\r\nexport const GET_ANIMALS_URL = \"https://api.petfinder.com/v2/animals/\";\r\nexport const GET_ANIMALS_TYPES_URL = \"https://api.petfinder.com/v2/types/\";\r\nexport const GET_ANIMAL_BREED_URL = \"https://api.petfinder.com/v2/types/{type}/breeds\";","export const saveToken = (token) => localStorage.setItem(\"token\", token);\r\n\r\nexport const getToken = () => localStorage.getItem(\"token\", \"no-token\");\r\n\r\nexport const clearLocalStorage = () => localStorage.clear();\r\n\r\nexport const joinQueryStringsToUrl = (url, queryStrings) => {\r\n\r\n    let newUrl = new URL(url);\r\n\r\n    Object.keys(queryStrings).forEach(key => {\r\n\r\n        if (typeof (queryStrings[key]) === \"object\") {\r\n            newUrl.searchParams.append(key, [...queryStrings[key]]);\r\n        }\r\n        else newUrl.searchParams.append(key, queryStrings[key]);\r\n    });\r\n\r\n    return newUrl;\r\n};\r\n","/* Constants */\r\nimport { GET_METHOD, POST_METHOD, API_KEY, SECRET_KEY, } from '../Utilities/Constants';\r\n\r\n/* Functions */\r\nimport { getToken, joinQueryStringsToUrl } from '../Utilities/Functions';\r\n\r\nexport default async function apiCall(url, method, data) {\r\n\r\n    if (method === POST_METHOD) {\r\n\r\n        let formData = new FormData();\r\n        formData.append('grant_type', 'client_credentials');\r\n        formData.append('client_id', API_KEY);\r\n        formData.append('client_secret', SECRET_KEY);\r\n\r\n        return await fetch(url, {\r\n            method,\r\n            body: formData,\r\n        }).then(response => response.json());\r\n\r\n    } else if (method === GET_METHOD) {\r\n\r\n        let token = getToken();\r\n        let newUrl = new URL(url);\r\n        if (data) {\r\n            newUrl = joinQueryStringsToUrl(url, data);\r\n        }\r\n\r\n        return await fetch(newUrl, {\r\n            method,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }).then(response => response.json());\r\n\r\n    }\r\n}\r\n","/* Sagas */\r\nimport { put, call, takeLatest, } from 'redux-saga/effects';\r\n\r\n/* api */\r\nimport apiCall from '../ApiCall/';\r\n\r\n/* Constats */\r\nimport { GET_METHOD, GET_ANIMALS_TYPES_URL, GET_ANIMAL_BREED_URL, } from '../Utilities/Constants';\r\n\r\n/* Actions */\r\nimport {\r\n    GET_ANIMAL_TYPES_BEGIN, GET_ANIMAL_TYPES_SUCCESS, SET_PROGRESS_ON, SET_PROGRESS_OFF, NEW_ERROR, GET_BREEDS_BY_ANIMAL_TYPE_BEGIN,\r\n    GET_BREEDS_BY_ANIMAL_TYPE_SUCCESS,\r\n} from '../Redux/Actions';\r\n\r\nexport function* getFilters() {\r\n    try {\r\n\r\n        yield put({ type: SET_PROGRESS_ON });\r\n\r\n        const payload = yield call(apiCall, GET_ANIMALS_TYPES_URL, GET_METHOD,);\r\n        if (payload.error) yield console.log(payload);\r\n        else yield put({ type: GET_ANIMAL_TYPES_SUCCESS, payload });\r\n\r\n        yield put({ type: SET_PROGRESS_OFF });\r\n\r\n    } catch (exception) {\r\n        yield put({ type: NEW_ERROR, payload: { message: exception.message, actionDispatched: GET_ANIMAL_TYPES_BEGIN } });\r\n    }\r\n}\r\n\r\nexport function* getBreedsByAnimalTypeSelected(action) {\r\n    try {\r\n\r\n        let GET_NEW_ANIMAL_BREED_URL = GET_ANIMAL_BREED_URL.replace(\"{type}\", action.payload.data);\r\n\r\n        yield put({ type: SET_PROGRESS_ON });\r\n\r\n        const payload = yield call(apiCall, GET_NEW_ANIMAL_BREED_URL, GET_METHOD,);\r\n\r\n        if (payload.error) yield console.log(payload);\r\n        else yield put({ type: GET_BREEDS_BY_ANIMAL_TYPE_SUCCESS, payload });\r\n\r\n        yield put({ type: SET_PROGRESS_OFF });\r\n\r\n    } catch (exception) {\r\n        yield put({ type: NEW_ERROR, payload: { message: exception.message, actionDispatched: GET_BREEDS_BY_ANIMAL_TYPE_BEGIN } });\r\n    }\r\n}\r\n\r\n//watchers\r\nexport default function* filters() {\r\n    yield takeLatest(GET_ANIMAL_TYPES_BEGIN, getFilters);\r\n    yield takeLatest(GET_BREEDS_BY_ANIMAL_TYPE_BEGIN, getBreedsByAnimalTypeSelected);\r\n}\r\n","/* Sagas */\r\nimport { put, call, takeLeading, } from 'redux-saga/effects';\r\n\r\n/* api */\r\nimport apiCall from '../ApiCall/';\r\n\r\n/* Constats */\r\nimport { POST_METHOD, GET_TOKEN_URL } from '../Utilities/Constants';\r\n\r\n/* Functions */\r\nimport { saveToken } from '../Utilities/Functions';\r\n\r\n/* Actions */\r\nimport { NEW_ERROR, } from '../Redux/Actions';\r\n\r\nexport function* getNewError(action) {\r\n    try {\r\n\r\n        /* If token expires */\r\n        if (action.payload.message === \"Failed to fetch\" || action.payload.hint === \"Access token is invalid\") {\r\n\r\n            const payload = yield call(apiCall, GET_TOKEN_URL, POST_METHOD,); //get new token\r\n            yield saveToken(payload.access_token);\r\n\r\n            /* Dispatch previous request again */\r\n            if (action.payload.action) yield put({ type: action.payload.actionDispatched, action: action.payload.action });\r\n            else yield put({ type: action.payload.actionDispatched });\r\n\r\n        }\r\n        else {\r\n            alert(\"hubo un error :c\");\r\n            console.log(action.payload);\r\n        }\r\n\r\n    } catch (exception) {\r\n        console.log(exception);\r\n    }\r\n}\r\n\r\n//watchers\r\nexport default function* errors() {\r\n    yield takeLeading(NEW_ERROR, getNewError);\r\n}\r\n","/* Sagas */\r\nimport { put, call, takeLatest, } from 'redux-saga/effects';\r\n\r\n/* api */\r\nimport apiCall from '../ApiCall/';\r\n\r\n/* Constats */\r\nimport { GET_ANIMALS_URL, GET_METHOD, } from '../Utilities/Constants';\r\n\r\n/* Actions */\r\nimport {\r\n    SET_PROGRESS_ON, SET_PROGRESS_OFF, NEW_ERROR, GET_PETS_BEGIN, GET_PETS_SUCCESS,\r\n    GET_PETS_WITH_FILTER_BEGIN, GET_PETS_WITH_FILTERS_SUCCESS,\r\n} from '../Redux/Actions';\r\n\r\nexport function* getPets() {\r\n    try {\r\n\r\n        yield put({ type: SET_PROGRESS_ON });\r\n\r\n        const payload = yield call(apiCall, GET_ANIMALS_URL, GET_METHOD,);\r\n        if (payload.status) put({ type: NEW_ERROR, payload: { ...payload, actionDispatched: GET_PETS_BEGIN } });\r\n        else yield put({ type: GET_PETS_SUCCESS, payload });\r\n\r\n        yield put({ type: SET_PROGRESS_OFF });\r\n\r\n    } catch (exception) {\r\n        yield put({ type: NEW_ERROR, payload: { message: exception.message, actionDispatched: GET_PETS_BEGIN } });\r\n    }\r\n}\r\n\r\nexport function* getPetsWithFilter(action) {\r\n    try {\r\n\r\n        yield put({ type: SET_PROGRESS_ON });\r\n\r\n        const payload = yield call(apiCall, GET_ANIMALS_URL, GET_METHOD, action.payload);\r\n\r\n        if (payload.status) put({ type: NEW_ERROR, payload: { ...payload, actionDispatched: GET_PETS_WITH_FILTER_BEGIN, action } });\r\n        else yield put({ type: GET_PETS_WITH_FILTERS_SUCCESS, payload });\r\n\r\n        yield put({ type: SET_PROGRESS_OFF });\r\n\r\n    } catch (exception) {\r\n        yield put({ type: NEW_ERROR, payload: { message: exception.message, actionDispatched: GET_PETS_WITH_FILTER_BEGIN } });\r\n    }\r\n}\r\n\r\n//watchers\r\nexport default function* pets() {\r\n    yield takeLatest(GET_PETS_BEGIN, getPets);\r\n    yield takeLatest(GET_PETS_WITH_FILTER_BEGIN, getPetsWithFilter);\r\n}\r\n","/* Sagas configs*/\r\nimport { all } from 'redux-saga/effects';\r\n\r\n/* Sagas */\r\nimport filters from './filters';\r\nimport errors from './errors';\r\nimport pets from './pets';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([filters(), errors(), pets()])\r\n}\r\n","/* React */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n/* Components */\nimport AppContainer from './App/';\nimport configureStore from './Redux/Store';\nimport './index.css';\nimport rootSaga from './Sagas';\n\nlet store = configureStore();\nstore.runSaga(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}